name: Build

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v3

      # 装 nodejs
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 装 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 安装 go
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
          check-latest: true

      - name: Setup go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 平台依赖
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Dependences
        run: |
          cd frontend
          pnpm i
          pnpm build
          cd ..

          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # 编译
      - name: Build
        run: |
          wails build -u -s

      - name: Build windows
        if: matrix.os == 'ubuntu-latest'
        run: |
          wails build -u -s -platform windows

      # 使用 upx 压缩可执行文件
      - name: Run UPX
        if: matrix.os != 'macos-latest'
        uses: crazy-max/ghaction-upx@v2
        with:
          version: latest
          files: |
            ./build/bin/*
          args: -fq

      - name: Move Files
        run: |
          mv assets/* build/bin/

      # 上传到 Artifact
      - name: Upload
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: dtool
          path: ./build/bin/

      - name: Upload macos
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: dtool-darwin
          path: ./build/bin/
